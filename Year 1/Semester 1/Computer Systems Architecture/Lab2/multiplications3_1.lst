     1                                  ; [-1+d-2*(b+1)]/a
     2                                  ; [-1+301-2*(99+1)]/50=(300-200)/50=100/50=2
     3                                  
     4                                  bits 32 ;assembling for the 32 bits architecture
     5                                  ; the start label will be the entry point in the program
     6                                  global  start 
     7                                  
     8                                  extern  exit ; we inform the assembler that the exit symbol is foreign, i.e. it exists even if we won't be defining it
     9                                  
    10                                  import  exit msvcrt.dll; exit is a function that ends the process, it is defined in msvcrt.dll
    11                                          ; msvcrt.dll contains exit, printf and all the other important C-runtime functions
    12                                  segment  data use32 class=data ; the data segment where the variables are declared 
    13 00000000 32                      	a db 50
    14 00000001 63                          b db 99
    15 00000002 28                          c db 40
    16 00000003 2D01                        d dw 301
    17                                      
    18                                  segment  code use32 class=code ; code segment
    19                                  start: 
    20 00000000 66B80200                	mov ax, 2 ; ax = 2
    21                                      
    22 00000004 8A1D[01000000]              mov bl, [b] ; bl = b
    23 0000000A 80C301                      add bl, 1 ; bl = bl + 1
    24                                      ; mul -> inmulteste numerele mereu in ax
    25 0000000D F6E3                        mul bl
    26                                      
    27 0000000F 66BBFFFF                    mov bx, -1 ; bx = -1
    28 00000013 66031D[03000000]            add bx, [d] ; bx = bx + d
    29                                      
    30 0000001A 6629C3                      sub bx, ax ; bx = bx - ax
    31                                      
    32 0000001D 6689D8                      mov ax, bx ; ax = bx
    33                                      ; div -> impartirea mereu in ax
    34 00000020 F635[00000000]              div byte [a] ; ax = ax / a
    35                                      
    36                                         
    37 00000026 6A00                    	push   dword 0 ;saves on stack the parameter of the function exit
    38 00000028 FF15[00000000]          	call   [exit] ; function exit is called in order to end the execution of
    39                                  ;the program
