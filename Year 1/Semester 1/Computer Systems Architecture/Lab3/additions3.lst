     1                                  ; (c+d)-(a+d)+b
     2                                  ; (80 + 180) - (4+180)+300=260 - 184 + 300 = 76 + 300 = 376
     3                                  
     4                                  bits 32 ;assembling for the 32 bits architecture
     5                                  ; the start label will be the entry point in the program
     6                                  global  start 
     7                                  
     8                                  extern  exit ; we inform the assembler that the exit symbol is foreign, i.e. it exists even if we won't be defining it
     9                                  
    10                                  import  exit msvcrt.dll; exit is a function that ends the process, it is defined in msvcrt.dll
    11                                          ; msvcrt.dll contains exit, printf and all the other important C-runtime functions
    12                                  segment  data use32 class=data ; the data segment where the variables are declared 
    13 00000000 04                      	a db 4
    14 00000001 2C01                        b dw 300
    15 00000003 50000000                    c dd 80
    16 00000007 B400000000000000            d dq 180
    17                                      
    18                                  segment  code use32 class=code ; code segment
    19                                  start: 
    20 00000000 A1[03000000]            	mov eax, [c] ; eax = c
    21 00000005 BA00000000                  mov edx, 0 ; transformam c in dq
    22                                      
    23 0000000A F8                          clc
    24 0000000B 0305[07000000]              add eax, dword [d] 
    25 00000011 1315[0B000000]              adc edx, dword [d+4] ; edx:eax = c + d
    26                                      
    27 00000017 8A1D[00000000]              mov bl, [a] ; bl = a
    28 0000001D B700                        mov bh, 0 ; transformam a in dw
    29 0000001F 66B90000                    mov cx, 0 ; transformam a in dd
    30                                      
    31 00000023 6651                        push cx
    32 00000025 6653                        push bx
    33 00000027 5B                          pop ebx
    34 00000028 B900000000                  mov ecx, 0 ; transformam a in dq
    35                                      
    36 0000002D F8                          clc
    37 0000002E 031D[07000000]              add ebx, dword [d] 
    38 00000034 130D[0B000000]              adc ecx, dword [d+4] ; ecx:ebx = a + d
    39                                      
    40 0000003A F8                          clc
    41 0000003B 29D8                        sub eax, ebx 
    42 0000003D 19CA                        sbb edx, ecx ; edx:eax = (c+d)-(a+d)
    43                                      
    44 0000003F 668B1D[01000000]            mov bx, [b]
    45 00000046 66B90000                    mov cx, 0 ; transformam b in dd
    46                                      
    47 0000004A 6651                        push cx
    48 0000004C 6653                        push bx
    49 0000004E 5B                          pop ebx
    50 0000004F B900000000                  mov ecx, 0 ; transformam b in dq
    51                                      
    52 00000054 F8                          clc
    53 00000055 01D8                        add eax, ebx
    54 00000057 11CA                        adc edx, ecx ; edx:eax = (c+d)-(a+d)+b
    55                                         
    56 00000059 6A00                    	push   dword 0 ;saves on stack the parameter of the function exit
    57 0000005B FF15[00000000]          	call   [exit] ; function exit is called in order to end the execution of
    58                                  ;the program
