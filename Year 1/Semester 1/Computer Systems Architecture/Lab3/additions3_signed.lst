     1                                  ; (b+b+d)-(c+a)
     2                                  ; (-200-200-180)-(-80-4)=(-400-180)-(-84)=-580+84=-496
     3                                  
     4                                  bits 32 ;assembling for the 32 bits architecture
     5                                  ; the start label will be the entry point in the program
     6                                  global  start 
     7                                  
     8                                  extern  exit ; we inform the assembler that the exit symbol is foreign, i.e. it exists even if we won't be defining it
     9                                  
    10                                  import  exit msvcrt.dll; exit is a function that ends the process, it is defined in msvcrt.dll
    11                                          ; msvcrt.dll contains exit, printf and all the other important C-runtime functions
    12                                  segment  data use32 class=data ; the data segment where the variables are declared 
    13 00000000 FC                      	a db -4
    14 00000001 38FF                        b dw -200
    15 00000003 B0FFFFFF                    c dd -80
    16 00000007 4CFFFFFFFFFFFFFF            d dq -180
    17                                      
    18                                  segment  code use32 class=code ; code segment
    19                                  start: 
    20 00000000 66A1[01000000]          	mov ax, [b]
    21 00000006 668B1D[01000000]            mov bx, [b]
    22                                      
    23 0000000D 6601D8                      add ax, bx ; b + b
    24 00000010 98                          cwde
    25 00000011 99                          cdq
    26                                      
    27 00000012 F8                          clc
    28 00000013 0305[07000000]              add eax, dword [d]
    29 00000019 1315[0B000000]              adc edx, dword [d+4] ; b + b + d
    30                                      
    31 0000001F 89C3                        mov ebx, eax
    32 00000021 89D1                        mov ecx, edx ; salvam b+b+d in ecx:ebx
    33                                      
    34 00000023 A0[00000000]                mov al, [a]
    35 00000028 6698                        cbw
    36 0000002A 98                          cwde
    37 0000002B 0305[03000000]              add eax, [c] ; c+a
    38 00000031 99                          cdq
    39                                      
    40 00000032 F8                          clc
    41 00000033 29C3                        sub ebx, eax
    42 00000035 19D1                        sbb ecx, edx ; (b+b+d)-(c+a)
    43                                         
    44 00000037 6A00                    	push   dword 0 ;saves on stack the parameter of the function exit
    45 00000039 FF15[00000000]          	call   [exit] ; function exit is called in order to end the execution of
    46                                  ;the program
