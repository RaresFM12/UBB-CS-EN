     1                                  ; (a+b*c+2/c)/(2+a)+e+x; a,b-byte; c-word; e-doubleword; x-qword
     2                                  ; (-1+2*-2+2/-2)/(2-1)+5+7 = (-1-4-1)/1+5+7=-6+5+7=6
     3                                  
     4                                  bits 32 ;assembling for the 32 bits architecture
     5                                  ; the start label will be the entry point in the program
     6                                  global  start 
     7                                  
     8                                  extern  exit ; we inform the assembler that the exit symbol is foreign, i.e. it exists even if we won't be defining it
     9                                  
    10                                  import  exit msvcrt.dll; exit is a function that ends the process, it is defined in msvcrt.dll
    11                                          ; msvcrt.dll contains exit, printf and all the other important C-runtime functions
    12                                  segment  data use32 class=data ; the data segment where the variables are declared 
    13 00000000 FF                      	a db -1
    14 00000001 02                          b db 2
    15 00000002 FEFF                        c dw -2
    16 00000004 05000000                    e dd 5
    17 00000008 0700000000000000            x dq 7
    18                                      
    19                                  segment  code use32 class=code ; code segment
    20                                  start: 
    21 00000000 A0[01000000]                mov al, [b]
    22 00000005 6698                        cbw 
    23 00000007 66F72D[02000000]            imul word [c]
    24                                      
    25 0000000E 6689C3                      mov bx, ax
    26 00000011 6689D1                      mov cx, dx ; cx:bx = b*c
    27                                      
    28 00000014 66B80200                    mov ax, 2
    29 00000018 66BA0000                    mov dx, 0
    30 0000001C 66F73D[02000000]            idiv word [c]
    31 00000023 6699                        cwd
    32                                      
    33 00000025 F8                          clc
    34 00000026 6601C3                      add bx, ax
    35 00000029 6611D1                      adc cx, dx
    36                                      
    37 0000002C A0[00000000]                mov al, [a]
    38 00000031 6698                        cbw
    39 00000033 6699                        cwd
    40                                      
    41 00000035 F8                          clc
    42 00000036 6601C3                      add bx, ax
    43 00000039 6611D1                      adc cx, dx ; (a+b*c+2/c)
    44                                      
    45 0000003C A0[00000000]                mov al, [a]
    46 00000041 6698                        cbw
    47 00000043 6683C002                    add ax, 2
    48                                      
    49 00000047 6689C2                      mov dx, ax
    50 0000004A 6689D8                      mov ax, bx
    51 0000004D 6689D3                      mov bx, dx
    52 00000050 6689CA                      mov dx, cx
    53                                      
    54 00000053 66F7FB                      idiv bx ; (a+b*c+2/c)/(2+a)
    55 00000056 98                          cwde
    56                                      
    57 00000057 8B1D[04000000]              mov ebx, [e]
    58 0000005D 01D8                        add eax, ebx
    59                                      
    60 0000005F 99                          cdq
    61 00000060 8B1D[08000000]              mov ebx, dword [x]
    62 00000066 8B0D[0C000000]              mov ecx, dword [x+4]
    63                                      
    64 0000006C F8                          clc
    65 0000006D 01D8                        add eax, ebx
    66 0000006F 11CA                        adc edx, ecx ; (a+b*c+2/c)/(2+a)+e+x
    67                                      
    68                                      
    69 00000071 6A00                    	push   dword 0 ;saves on stack the parameter of the function exit
    70 00000073 FF15[00000000]          	call   [exit] ; function exit is called in order to end the execution of
    71                                  ;the program
