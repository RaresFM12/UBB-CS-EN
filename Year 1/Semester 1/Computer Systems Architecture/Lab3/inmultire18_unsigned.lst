     1                                  ; (a+b*c+2/c)/(2+a)+e+x; a,b-byte; c-word; e-doubleword; x-qword
     2                                  ; (2+3*1+2/1)/(2+2)+5+7= 7/4+5+7=1+12=13
     3                                  
     4                                  bits 32 ;assembling for the 32 bits architecture
     5                                  ; the start label will be the entry point in the program
     6                                  global  start 
     7                                  
     8                                  extern  exit ; we inform the assembler that the exit symbol is foreign, i.e. it exists even if we won't be defining it
     9                                  
    10                                  import  exit msvcrt.dll; exit is a function that ends the process, it is defined in msvcrt.dll
    11                                          ; msvcrt.dll contains exit, printf and all the other important C-runtime functions
    12                                  segment  data use32 class=data ; the data segment where the variables are declared 
    13 00000000 02                      	a db 2
    14 00000001 03                          b db 3
    15 00000002 0100                        c dw 1
    16 00000004 05000000                    e dd 5
    17 00000008 0700000000000000            x dq 7
    18                                      
    19                                  segment  code use32 class=code ; code segment
    20                                  start: 
    21 00000000 A0[01000000]                mov al, [b]
    22 00000005 B400                        mov ah, 0
    23 00000007 668B1D[02000000]            mov bx, [c]
    24 0000000E 66F7E3                      mul bx
    25                                      
    26 00000011 6689C3                      mov bx, ax
    27 00000014 6689D1                      mov cx, dx
    28                                      
    29 00000017 66B80200                    mov ax, 2
    30 0000001B 66BA0000                    mov dx, 0
    31 0000001F 66F735[02000000]            div word [c]
    32 00000026 66BA0000                    mov dx, 0
    33                                      
    34 0000002A F8                          clc
    35 0000002B 6601D8                      add ax, bx
    36 0000002E 6611CA                      adc dx, cx
    37                                      
    38 00000031 8A1D[00000000]              mov bl, [a]
    39 00000037 B700                        mov bh, 0
    40 00000039 66B90000                    mov cx, 0
    41                                      
    42 0000003D F8                          clc
    43 0000003E 6601D8                      add ax, bx
    44 00000041 6611CA                      adc dx, cx
    45                                      
    46 00000044 8A1D[00000000]              mov bl, [a]
    47 0000004A B700                        mov bh, 0
    48 0000004C 6683C302                    add bx, 2
    49 00000050 66F7F3                      div bx
    50                                      
    51 00000053 66BA0000                    mov dx, 0
    52 00000057 668B1D[04000000]            mov bx, word [e]
    53 0000005E 668B0D[06000000]            mov cx, word [e+2]
    54                                      
    55 00000065 F8                          clc
    56 00000066 6601D8                      add ax, bx
    57 00000069 6611CA                      adc dx, cx
    58                                      
    59 0000006C 6652                        push dx
    60 0000006E 6650                        push ax
    61 00000070 58                          pop eax
    62 00000071 BA00000000                  mov edx, 0
    63                                      
    64 00000076 8B1D[08000000]              mov ebx, dword [x]
    65 0000007C 8B0D[0C000000]              mov ecx, dword [x+4]
    66                                      
    67 00000082 F8                          clc
    68 00000083 01D8                        add eax, ebx
    69 00000085 11CA                        adc edx, ecx
    70                                      
    71                                      
    72 00000087 6A00                    	push   dword 0 ;saves on stack the parameter of the function exit
    73 00000089 FF15[00000000]          	call   [exit] ; function exit is called in order to end the execution of
    74                                  ;the program
