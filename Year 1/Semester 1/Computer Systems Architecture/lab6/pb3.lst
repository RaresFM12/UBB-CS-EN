     1                                  ; 0702090Ah, 0B0C0304h, 05060108h    
     2                                  ; 72h, 9Ah, 0BCh,  34h, 56h, 18h
     3                                  ; 9Ah, 0BCh, 18h, 34h, 56h, 72h
     4                                  
     5                                  bits 32 ;assembling for the 32 bits architecture
     6                                  ; the start label will be the entry point in the program
     7                                  global  start 
     8                                  
     9                                  extern  exit ; we inform the assembler that the exit symbol is foreign, i.e. it exists even if we won't be defining it
    10                                  
    11                                  import  exit msvcrt.dll; exit is a function that ends the process, it is defined in msvcrt.dll
    12                                          ; msvcrt.dll contains exit, printf and all the other important C-runtime functions
    13                                  segment  data use32 class=data ; the data segment where the variables are declared 
    14 00000000 0A09020704030C0B08-     	s dd 0702090Ah, 0B0C0304h, 05060108h
    14 00000009 010605             
    15                                      len equ ($-s) / 4
    16 0000000C 00<rept>                    a times (len * 2) db 0
    17 00000012 00<rept>                    fin times (len * 2) db 0
    18                                      
    19                                  segment  code use32 class=code ; code segment
    20                                  start: 
    21 00000000 B903000000                  mov ecx, len
    22 00000005 BE[00000000]                mov esi, s
    23 0000000A BB00000000                  mov ebx, 0
    24 0000000F FC                          cld
    25                                      
    26 00000010 E329                        jecxz Sfarsit1
    27                                          Repeta:
    28 00000012 AD                                  lodsd
    29 00000013 C1C810                              ror eax, 16
    30 00000016 0883[0C000000]                      or [a + ebx], al
    31 0000001C C1C804                              ror eax, 4
    32 0000001F 0883[0C000000]                      or [a + ebx], al
    33                                              
    34 00000025 43                                  inc ebx
    35 00000026 C1C80C                              ror eax, 12
    36 00000029 0883[0C000000]                      or [a + ebx], al
    37 0000002F C1C804                              ror eax, 4
    38 00000032 0883[0C000000]                      or [a + ebx], al
    39                                              
    40 00000038 43                                  inc ebx
    41 00000039 E2D7                            loop Repeta
    42                                      Sfarsit1:
    43                                      
    44 0000003B BB00000000                  mov ebx, 0
    45                                      Repeta1:
    46 00000040 83FB06                          cmp ebx, (len * 2)
    47 00000043 742A                            jz fin_sir1
    48                                          
    49 00000045 89D8                            mov eax, ebx
    50 00000047 40                              inc eax
    51                                          
    52                                          Repeta2:
    53 00000048 83F806                              cmp eax, (len * 2)
    54 0000004B 741F                                jz fin_sir2
    55                                              
    56 0000004D 8A93[0C000000]                      mov dl, [a + ebx]
    57 00000053 8A88[0C000000]                      mov cl, [a + eax]
    58 00000059 38CA                                cmp dl, cl
    59 0000005B 7E0C                                jle mic_egal
    60 0000005D 888B[0C000000]                          mov [a + ebx], cl
    61 00000063 8890[0C000000]                          mov [a + eax], dl
    62                                              mic_egal:
    63                                          
    64 00000069 40                                  inc eax
    65 0000006A EBDC                                jmp Repeta2
    66                                              
    67                                          fin_sir2:
    68 0000006C 43                              inc ebx
    69 0000006D EBD1                            jmp Repeta1
    70                                          
    71                                      fin_sir1:
    72                                      
    73 0000006F 6A00                    	push   dword 0 ;saves on stack the parameter of the function exit
    74 00000071 FF15[00000000]          	call   [exit] ; function exit is called in order to end the execution of
    75                                  ;the program
