     1                                  ; Two natural numbers a and b (a, b: dword, defined in the data segment) are given. 
     2                                  ; Calculate their sum and display the result in the following format: "<a> + <b> = <result>". Example: "1 + 2 = 3"
     3                                  ; The values will be displayed in decimal format (base 10) with sign.
     4                                  
     5                                  bits 32
     6                                  
     7                                  global start        
     8                                  
     9                                  ; declare extern functions used by the programme
    10                                  extern exit, printf, scanf ; add printf and scanf as extern functions            
    11                                  import exit msvcrt.dll    
    12                                  import printf msvcrt.dll    ; tell the assembler that function printf is found in msvcrt.dll library
    13                                  import scanf msvcrt.dll     ; similar for scanf
    14                                                            
    15                                  segment data use32 class=data
    16 00000000 00000000                	a dd 0
    17 00000004 00000000                    b dd 0
    18 00000008 256400                      text db "%d", 0
    19 0000000B 61203D2000                  message1 db "a = ", 0
    20 00000010 62203D2000                  message2 db "b = ", 0
    21 00000015 256400                      formatd db "%d", 0
    22 00000018 257800                      formath db "%x", 0
    23                                      
    24                                      
    25                                  segment code use32 class=code
    26                                      start:
    27 00000000 68[0B000000]                   push dword message1
    28 00000005 FF15[00000000]                 call [printf]
    29 0000000B 83C404                         add esp, 4
    30                                         
    31 0000000E 68[00000000]                   push dword a
    32 00000013 68[15000000]                   push dword formatd
    33 00000018 FF15[00000000]                 call [scanf]
    34 0000001E 83C408                         add esp, 4 * 2
    35                                         
    36 00000021 68[10000000]                   push dword message2
    37 00000026 FF15[00000000]                 call [printf]
    38 0000002C 83C404                         add esp, 4
    39                                          
    40 0000002F 68[04000000]                   push dword b
    41 00000034 68[18000000]                   push dword formath
    42 00000039 FF15[00000000]                 call [scanf]
    43 0000003F 83C408                         add esp, 4 * 2
    44                                         
    45 00000042 B800000000                     mov eax, 0
    46 00000047 0305[00000000]                 add eax, [a]
    47 0000004D 0305[04000000]                 add eax, [b]
    48                                         
    49 00000053 B900000000                     mov ecx, 0
    50 00000058 83F800                         cmp eax, 0
    51 0000005B 7411                           je sfarsit1
    52                                             Repeta:
    53 0000005D A901000000                             test eax, 1
    54 00000062 7401                                   jz even
    55 00000064 41                                         inc ecx
    56                                                 
    57                                                 even:
    58                                             
    59 00000065 D1E8                                   shr eax, 1
    60 00000067 83F800                                 cmp eax, 0
    61 0000006A 7402                                   jz sfarsit2
    62 0000006C EBEF                                   jmp Repeta
    63                                                 
    64                                         sfarsit1:
    65                                         sfarsit2:
    66                                         
    67 0000006E 51                             push dword ecx
    68 0000006F 68[08000000]                   push dword text
    69 00000074 FF15[00000000]                 call [printf]
    70 0000007A 83C408                         add esp, 4 * 2
    71                                         
    72                                         ; exit(0)
    73 0000007D 6A00                           push dword 0      ; place on stack parameter for exit
    74 0000007F FF15[00000000]                 call [exit]       ; call exit to terminate the program
