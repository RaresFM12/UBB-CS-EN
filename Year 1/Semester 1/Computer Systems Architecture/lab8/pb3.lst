     1                                  ; Two natural numbers a and b (a, b: dword, defined in the data segment) are given. 
     2                                  ; Calculate their sum and display the result in the following format: "<a> + <b> = <result>". Example: "1 + 2 = 3"
     3                                  ; The values will be displayed in decimal format (base 10) with sign.
     4                                  
     5                                  bits 32
     6                                  
     7                                  global start        
     8                                  
     9                                  ; declare extern functions used by the programme
    10                                  extern exit, printf, scanf ; add printf and scanf as extern functions            
    11                                  import exit msvcrt.dll    
    12                                  import printf msvcrt.dll    ; tell the assembler that function printf is found in msvcrt.dll library
    13                                  import scanf msvcrt.dll     ; similar for scanf
    14                                                            
    15                                  segment data use32 class=data
    16 00000000 00000000                	a dd 0
    17 00000004 00000000                    b dd 0
    18 00000008 2564202B202564203D-         text db "%d + %d = %d", 0
    18 00000011 20256400           
    19 00000015 61203D2000                  message1 db "a = ", 0
    20 0000001A 62203D2000                  message2 db "b = ", 0
    21 0000001F 256400                      format db "%d", 0
    22                                      
    23                                      
    24                                  segment code use32 class=code
    25                                      start:
    26 00000000 68[15000000]                   push dword message1
    27 00000005 FF15[00000000]                 call [printf]
    28 0000000B 83C404                         add esp, 4
    29                                         
    30 0000000E 68[00000000]                   push dword a
    31 00000013 68[1F000000]                   push dword format
    32 00000018 FF15[00000000]                 call [scanf]
    33 0000001E 83C408                         add esp, 4 * 2
    34                                         
    35 00000021 68[1A000000]                   push dword message2
    36 00000026 FF15[00000000]                 call [printf]
    37 0000002C 83C404                         add esp, 4
    38                                          
    39 0000002F 68[04000000]                   push dword b
    40 00000034 68[1F000000]                   push dword format
    41 00000039 FF15[00000000]                 call [scanf]
    42 0000003F 83C408                         add esp, 4 * 2
    43                                         
    44 00000042 B800000000                     mov eax, 0
    45 00000047 0305[00000000]                 add eax, [a]
    46 0000004D 0305[04000000]                 add eax, [b]
    47                                         
    48 00000053 50                             push dword eax
    49 00000054 FF35[04000000]                 push dword [b]
    50 0000005A FF35[00000000]                 push dword [a]
    51 00000060 68[08000000]                   push dword text
    52 00000065 FF15[00000000]                 call [printf]
    53 0000006B 83C410                         add esp, 4 * 4
    54                                          
    55                                         ; exit(0)
    56 0000006E 6A00                           push dword 0      ; place on stack parameter for exit
    57 00000070 FF15[00000000]                 call [exit]       ; call exit to terminate the program
