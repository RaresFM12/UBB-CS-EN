     1                                  ; The following code will open a file called "ana.txt" from current folder,
     2                                  ; it will read maximum 100 characters from this file,
     3                                  ; and it will display to the console the number of chars and the text we've read.
     4                                  
     5                                  ; The program will use:
     6                                  ; - the function fopen() to open/create the file
     7                                  ; - the function fread() to read from file
     8                                  ; - the function printf() to display a text
     9                                  ; - the function fclose() to close the created file.
    10                                  
    11                                  ; Because the fopen() call uses the file access mode "r", the file will be open for
    12                                  ; reading. The file must exist, otherwise the fopen() call will fail.
    13                                  ; For details about the file access modes see the section "Theory".
    14                                  
    15                                  ; Any string used by printf() must be null-terminated ('\0').
    16                                  
    17                                  bits 32
    18                                  
    19                                  global start
    20                                  
    21                                  ; declare external functions needed by our program
    22                                  extern exit, fopen, fread, fclose, printf
    23                                  import exit msvcrt.dll
    24                                  import fopen msvcrt.dll
    25                                  import fread msvcrt.dll
    26                                  import fclose msvcrt.dll
    27                                  import printf msvcrt.dll
    28                                  
    29                                  ; our data is declared here (the variables needed by our program)
    30                                  segment data use32 class=data
    31 00000000 736574322E74787400          file_name db "set2.txt", 0   ; filename to be read
    32 00000009 7200                        access_mode db "r", 0       ; file access mode:
    33                                                                  ; r - opens a file for reading. The file must exist.
    34 0000000B FFFFFFFF                    file_descriptor dd -1       ; variable to hold the file descriptor
    35                                      len equ 100                 ; maximum number of characters to read
    36 0000000F 00<rept>                    text times (len+1) db 0     ; string to hold the text which is read from file
    37 00000074 256420776F72647300          format db "%d words", 0
    38                                  
    39                                  ; our code starts here
    40                                  segment code use32 class=code
    41                                      start:
    42                                          ; call fopen() to create the file
    43                                          ; fopen() will return a file descriptor in the EAX or 0 in case of error
    44                                          ; eax = fopen(file_name, access_mode)
    45 00000000 68[09000000]                    push dword access_mode     
    46 00000005 68[00000000]                    push dword file_name
    47 0000000A FF15[00000000]                  call [fopen]
    48 00000010 83C408                          add esp, 4*2                ; clean-up the stack
    49                                  
    50 00000013 A3[0B000000]                    mov [file_descriptor], eax  ; store the file descriptor returned by fopen
    51                                  
    52                                          ; check if fopen() has successfully created the file (EAX != 0)
    53 00000018 83F800                          cmp eax, 0
    54 0000001B 0F8489000000                    je final
    55                                  
    56 00000021 FF35[0B000000]                  push dword [file_descriptor]
    57 00000027 6A64                            push dword len
    58 00000029 6A01                            push dword 1
    59 0000002B 68[0F000000]                    push dword text        
    60 00000030 FF15[00000000]                  call [fread]
    61 00000036 83C410                          add esp, 4*4
    62                                  
    63 00000039 BE00000000                      mov esi, 0
    64 0000003E 89C1                            mov ecx, eax
    65 00000040 BB00000000                      mov ebx, 0
    66 00000045 BA00000000                      mov edx, 0
    67                                          
    68 0000004A E340                            jecxz sfarsit1
    69                                              Repeta:
    70 0000004C 8A86[0F000000]                          mov al, [text + esi]
    71 00000052 3C20                                    cmp al, ' '
    72 00000054 7405                                    jz sari1
    73 00000056 3C2E                                        cmp al, '.'
    74 00000058 7401                                        jz sari2
    75 0000005A 43                                              inc ebx
    76                                                      
    77                                                      sari2:
    78                                                  sari1:
    79                                                  
    80 0000005B 3C20                                    cmp al, ' '
    81 0000005D 750B                                    jnz sari3
    82 0000005F 83FB00                                      cmp ebx, 0
    83 00000062 7401                                        jz sari4
    84 00000064 42                                              inc edx
    85                                                      sari4:
    86                                                      
    87 00000065 BB00000000                                  mov ebx, 0
    88                                                  sari3:
    89                                                  
    90 0000006A 3C2E                                    cmp al, '.'
    91 0000006C 750B                                    jnz sari5
    92 0000006E 83FB00                                      cmp ebx, 0
    93 00000071 7401                                        jz sari6
    94 00000073 42                                              inc edx
    95                                                      sari6:
    96                                                      
    97 00000074 BB00000000                                  mov ebx, 0
    98                                                  sari5:
    99                                                  
   100 00000079 46                                      inc esi
   101 0000007A E2D0                                loop Repeta
   102                                              
   103                                              ; daca ultimul caracter e o litera
   104 0000007C 4E                                  dec esi
   105 0000007D 8A86[0F000000]                      mov al, [text + esi]
   106 00000083 3C20                                cmp al, ' '
   107 00000085 7405                                    jz sari7
   108 00000087 3C2E                                        cmp al, '.'
   109 00000089 7401                                        jz sari8
   110 0000008B 42                                              inc edx
   111                                                      
   112                                                      sari8:
   113                                                  sari7:
   114                                          
   115                                          sfarsit1:
   116                                          
   117 0000008C 52                              push dword edx
   118 0000008D 68[74000000]                    push dword format
   119 00000092 FF15[00000000]                  call [printf]
   120 00000098 83C408                          add esp, 2 * 4
   121                                          
   122 0000009B FF35[0B000000]                  push dword [file_descriptor]
   123 000000A1 FF15[00000000]                  call [fclose]
   124 000000A7 83C404                          add esp, 4
   125                                  
   126                                        final:
   127                                  
   128                                          ; exit(0)
   129 000000AA 6A00                            push dword 0
   130 000000AC FF15[00000000]                  call [exit]
